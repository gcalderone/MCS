# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/mcs
pkgincludedir = $(includedir)/mcs
pkglibdir = $(libdir)/mcs
pkglibexecdir = $(libexecdir)/mcs
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin16.7.0
host_triplet = x86_64-apple-darwin16.7.0
bin_PROGRAMS = mcsexec$(EXEEXT) b64codec$(EXEEXT) killmcs$(EXEEXT) \
	$(am__EXEEXT_1)
#am__append_1 = mcscreatekey
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_config_libconfig_in.m4 \
	$(top_srcdir)/m4/ac_define_dir.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/ax_compare_version.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = mcs_config.h
CONFIG_CLEAN_FILES = doc.h
CONFIG_CLEAN_VPATH_FILES =
#am__EXEEXT_1 = mcscreatekey$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(includedir)"
PROGRAMS = $(bin_PROGRAMS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
LTLIBRARIES = $(lib_LTLIBRARIES)
libmcs_la_LIBADD =
am_libmcs_la_OBJECTS = libmcs_la-mcsmsg.lo libmcs_la-mcs_c.lo \
	libmcs_la-Utils.lo libmcs_la-Readers.lo libmcs_la-Writers.lo \
	libmcs_la-Event.lo libmcs_la-Serializable.lo \
	libmcs_la-Socket.lo libmcs_la-Thread.lo libmcs_la-Data.lo \
	libmcs_la-Record.lo libmcs_la-Conf.lo \
	libmcs_la-CommandParser.lo libmcs_la-Db.lo \
	libmcs_la-BaseThread.lo libmcs_la-UserThread.lo \
	libmcs_la-LocalThread.lo libmcs_la-Env.lo libmcs_la-Server.lo \
	libmcs_la-Client.lo libmcs_la-Main.lo
nodist_libmcs_la_OBJECTS = mcs_fortran.lo
libmcs_la_OBJECTS = $(am_libmcs_la_OBJECTS) \
	$(nodist_libmcs_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libmcs_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(libmcs_la_CXXFLAGS) \
	$(CXXFLAGS) $(libmcs_la_LDFLAGS) $(LDFLAGS) -o $@
am_b64codec_OBJECTS = b64codec.$(OBJEXT)
b64codec_OBJECTS = $(am_b64codec_OBJECTS)
b64codec_DEPENDENCIES = ../contrib/libjson/.libs/libmcsjson.la \
	libmcs.la
am_killmcs_OBJECTS = killmcs.$(OBJEXT)
killmcs_OBJECTS = $(am_killmcs_OBJECTS)
killmcs_DEPENDENCIES = ../contrib/libjson/.libs/libmcsjson.la \
	libmcs.la
am__mcscreatekey_SOURCES_DIST = mcscreatekey.cc
#am_mcscreatekey_OBJECTS = mcscreatekey.$(OBJEXT)
mcscreatekey_OBJECTS = $(am_mcscreatekey_OBJECTS)
#mcscreatekey_DEPENDENCIES =  \
#	../contrib/libjson/.libs/libmcsjson.la \
#	libmcs.la
am_mcsexec_OBJECTS = mcsexec.$(OBJEXT)
mcsexec_OBJECTS = $(am_mcsexec_OBJECTS)
mcsexec_LDADD = $(LDADD)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/b64codec.Po ./$(DEPDIR)/killmcs.Po \
	./$(DEPDIR)/libmcs_la-BaseThread.Plo \
	./$(DEPDIR)/libmcs_la-Client.Plo \
	./$(DEPDIR)/libmcs_la-CommandParser.Plo \
	./$(DEPDIR)/libmcs_la-Conf.Plo ./$(DEPDIR)/libmcs_la-Data.Plo \
	./$(DEPDIR)/libmcs_la-Db.Plo ./$(DEPDIR)/libmcs_la-Env.Plo \
	./$(DEPDIR)/libmcs_la-Event.Plo \
	./$(DEPDIR)/libmcs_la-LocalThread.Plo \
	./$(DEPDIR)/libmcs_la-Main.Plo \
	./$(DEPDIR)/libmcs_la-Readers.Plo \
	./$(DEPDIR)/libmcs_la-Record.Plo \
	./$(DEPDIR)/libmcs_la-Serializable.Plo \
	./$(DEPDIR)/libmcs_la-Server.Plo \
	./$(DEPDIR)/libmcs_la-Socket.Plo \
	./$(DEPDIR)/libmcs_la-Thread.Plo \
	./$(DEPDIR)/libmcs_la-UserThread.Plo \
	./$(DEPDIR)/libmcs_la-Utils.Plo \
	./$(DEPDIR)/libmcs_la-Writers.Plo \
	./$(DEPDIR)/libmcs_la-mcs_c.Plo \
	./$(DEPDIR)/libmcs_la-mcsmsg.Plo ./$(DEPDIR)/mcs_fortran.Plo \
	./$(DEPDIR)/mcscreatekey.Po ./$(DEPDIR)/mcsexec.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libmcs_la_SOURCES) $(nodist_libmcs_la_SOURCES) \
	$(b64codec_SOURCES) $(killmcs_SOURCES) $(mcscreatekey_SOURCES) \
	$(mcsexec_SOURCES)
DIST_SOURCES = $(libmcs_la_SOURCES) $(b64codec_SOURCES) \
	$(killmcs_SOURCES) $(am__mcscreatekey_SOURCES_DIST) \
	$(mcsexec_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)mcs_config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/doc.h.in \
	$(srcdir)/mcs_config.h.in $(top_srcdir)/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/nicastro/Soft/Devel/GitHub/MCS/config/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
ARCHFLAGS = 
AUTOCONF = ${SHELL} /Users/nicastro/Soft/Devel/GitHub/MCS/config/missing autoconf
AUTOHEADER = ${SHELL} /Users/nicastro/Soft/Devel/GitHub/MCS/config/missing autoheader
AUTOMAKE = ${SHELL} /Users/nicastro/Soft/Devel/GitHub/MCS/config/missing automake-1.16
AWK = gawk
BINDIR = /usr/local/bin
CC = gcc
CCDEPMODE = depmode=gcc3
CFITSIO_LDFLAGS = -L/usr/local/cfitsio/lib -Wl,-rpath,/usr/local/cfitsio/lib
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = -Wall  -DMACH_64 -I/opt/local/include  -I/usr/local/mysql/include  -I/usr/local/cfitsio/include
CURL_CONFIG = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIR = /usr/local/share/mcs
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
IDL_BIN = 
IDL_BINDIR = 
IDL_CFLAGS = 
IDL_DIR = /Applications/harris/idl86
IDL_INCDIR = 
IDL_LD_FLAGS = 
IDL_LIBBIN = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTERFACE_VERSION = 4:0:0
LD = /opt/local/bin/ld
LDFLAGS =  -L/opt/local/lib  -L/usr/local/mysql/lib  -L/usr/local/cfitsio/lib -Wl,-rpath,/usr/local/cfitsio/lib
LIBOBJS = 
LIBS = -lcfitsio -lmysqlclient -lpcrecpp -lpthread 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /Users/nicastro/Soft/Devel/GitHub/MCS/config/missing makeinfo
MANIFEST_TOOL = :
MCS_CONFIG = share/scripts/mcs-config
MCS_VERSION = 0.3.3-alpha7
MKDIR_P = ../config/install-sh -c -d
MYSQL_CONFIG = /usr/local/mysql/bin/mysql_config
MYSQL_VERSION = 5_7
NM = /opt/local/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OPENSSL = 
OTOOL = otool
OTOOL64 = :
PACKAGE = mcs
PACKAGE_BUGREPORT = Giorgio Calderone <giorgio.calderone@gmail.com> Luciano Nicastro <nicastro@iasfbo.inaf.it>
PACKAGE_NAME = mcs
PACKAGE_STRING = mcs 0.3.3-alpha7
PACKAGE_TARNAME = mcs
PACKAGE_URL = 
PACKAGE_VERSION = 0.3.3-alpha7
PATH_SEPARATOR = :
PCRE_CONFIG = /opt/local/bin/pcre-config
PERL = /opt/local/bin/perl
PERL_CFLAGS = 
PERL_EXTDIR = 
PHP = 
PHP_CFLAGS = 
PHP_CONFIG = 
PHP_EXTDIR = 
PHP_INCPATH = 
PYTHON_CFLAGS = 
PYTHON_CONFIG = 
RANLIB = ranlib
SED = /opt/local/bin/gsed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
SWIG = 
SWIG_VER = 
VERSION = 0.3.3-alpha7
abs_builddir = /Users/nicastro/Soft/Devel/GitHub/MCS/src
abs_srcdir = /Users/nicastro/Soft/Devel/GitHub/MCS/src
abs_top_builddir = /Users/nicastro/Soft/Devel/GitHub/MCS
abs_top_srcdir = /Users/nicastro/Soft/Devel/GitHub/MCS
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin16.7.0
build_alias = 
build_cpu = x86_64
build_os = darwin16.7.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin16.7.0
host_alias = 
host_cpu = x86_64
host_os = darwin16.7.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/nicastro/Soft/Devel/GitHub/MCS/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mcs_cflags = -Wall  -DMACH_64 -I/opt/local/include  -I/usr/local/mysql/include  -I/usr/local/cfitsio/include -g -O2
mcs_libs = -lmcsjson -lmcs
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  contrib/libjson
sysconfdir = ${prefix}/etc
target = 
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# ----------------------------------------------------------------------^
# Copyright (C) 2004, 2005, 2006, 2007, 2008 Giorgio Calderone
# (mailto: <gcalderone@ifc.inaf.it>)
# 
# This file is part of MCS.
# 
# MCS is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# MCS is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with MCS; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 
# ----------------------------------------------------------------------$
EXTRA_DIST = mcsifd.h mcs_c.pre.h beautify.pl \
             prepConst.pl mcsmsg.pre c2fortran.pl doc.h

lib_LTLIBRARIES = libmcs.la
include_HEADERS = \
		   mcs_config.h      \
		   mcs.hh            \
		   mcsmsg.hh         \
		   mcstypes.hh       \
                   mcs_c.h           \
                   mcs_fortran.inc   \
                   mcs_facility.inc

libmcs_la_LDFLAGS = -version-info 4:0:0
libmcs_la_CXXFLAGS = -I../contrib/libjson -fno-rtti
libmcs_la_SOURCES = \
		   mcs_config.h      \
		   mcs.hh            \
		   mcsmsg.hh         \
		   mcsmsg.cc         \
		   mcstypes.hh       \
                   mcs_c.h           \
                   mcs_c.cc          \
		   Utils.cc          \
		   Readers.cc        \
		   Writers.cc        \
		   Event.cc          \
		   Serializable.cc   \
		   Socket.cc         \
		   Thread.cc         \
		   Data.cc           \
		   Record.cc         \
		   Conf.cc           \
		   CommandParser.cc  \
		   Db.cc             \
		   BaseThread.cc     \
		   UserThread.cc     \
		   LocalThread.cc    \
		   Env.cc            \
		   Server.cc         \
                   Client.cc         \
		   Main.cc

nodist_libmcs_la_SOURCES = mcs_fortran.c
CLEANFILES = mcs_fortran.c
mcsexec_SOURCES = mcsexec.cc
b64codec_SOURCES = b64codec.cc
b64codec_LDADD = ../contrib/libjson/.libs/libmcsjson.la libmcs.la
#mcscreatekey_SOURCES = mcscreatekey.cc
#mcscreatekey_LDADD = ../contrib/libjson/.libs/libmcsjson.la libmcs.la
killmcs_SOURCES = killmcs.cc
killmcs_LDADD = ../contrib/libjson/.libs/libmcsjson.la libmcs.la
all: mcs_config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

mcs_config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/mcs_config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/mcs_config.h
$(srcdir)/mcs_config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f mcs_config.h stamp-h1
doc.h: $(top_builddir)/config.status $(srcdir)/doc.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libmcs.la: $(libmcs_la_OBJECTS) $(libmcs_la_DEPENDENCIES) $(EXTRA_libmcs_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libmcs_la_LINK) -rpath $(libdir) $(libmcs_la_OBJECTS) $(libmcs_la_LIBADD) $(LIBS)

b64codec$(EXEEXT): $(b64codec_OBJECTS) $(b64codec_DEPENDENCIES) $(EXTRA_b64codec_DEPENDENCIES) 
	@rm -f b64codec$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(b64codec_OBJECTS) $(b64codec_LDADD) $(LIBS)

killmcs$(EXEEXT): $(killmcs_OBJECTS) $(killmcs_DEPENDENCIES) $(EXTRA_killmcs_DEPENDENCIES) 
	@rm -f killmcs$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(killmcs_OBJECTS) $(killmcs_LDADD) $(LIBS)

mcscreatekey$(EXEEXT): $(mcscreatekey_OBJECTS) $(mcscreatekey_DEPENDENCIES) $(EXTRA_mcscreatekey_DEPENDENCIES) 
	@rm -f mcscreatekey$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(mcscreatekey_OBJECTS) $(mcscreatekey_LDADD) $(LIBS)

mcsexec$(EXEEXT): $(mcsexec_OBJECTS) $(mcsexec_DEPENDENCIES) $(EXTRA_mcsexec_DEPENDENCIES) 
	@rm -f mcsexec$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(mcsexec_OBJECTS) $(mcsexec_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/b64codec.Po # am--include-marker
include ./$(DEPDIR)/killmcs.Po # am--include-marker
include ./$(DEPDIR)/libmcs_la-BaseThread.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-Client.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-CommandParser.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-Conf.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-Data.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-Db.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-Env.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-Event.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-LocalThread.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-Main.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-Readers.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-Record.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-Serializable.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-Server.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-Socket.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-Thread.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-UserThread.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-Utils.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-Writers.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-mcs_c.Plo # am--include-marker
include ./$(DEPDIR)/libmcs_la-mcsmsg.Plo # am--include-marker
include ./$(DEPDIR)/mcs_fortran.Plo # am--include-marker
include ./$(DEPDIR)/mcscreatekey.Po # am--include-marker
include ./$(DEPDIR)/mcsexec.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libmcs_la-mcsmsg.lo: mcsmsg.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-mcsmsg.lo -MD -MP -MF $(DEPDIR)/libmcs_la-mcsmsg.Tpo -c -o libmcs_la-mcsmsg.lo `test -f 'mcsmsg.cc' || echo '$(srcdir)/'`mcsmsg.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-mcsmsg.Tpo $(DEPDIR)/libmcs_la-mcsmsg.Plo
#	$(AM_V_CXX)source='mcsmsg.cc' object='libmcs_la-mcsmsg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-mcsmsg.lo `test -f 'mcsmsg.cc' || echo '$(srcdir)/'`mcsmsg.cc

libmcs_la-mcs_c.lo: mcs_c.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-mcs_c.lo -MD -MP -MF $(DEPDIR)/libmcs_la-mcs_c.Tpo -c -o libmcs_la-mcs_c.lo `test -f 'mcs_c.cc' || echo '$(srcdir)/'`mcs_c.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-mcs_c.Tpo $(DEPDIR)/libmcs_la-mcs_c.Plo
#	$(AM_V_CXX)source='mcs_c.cc' object='libmcs_la-mcs_c.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-mcs_c.lo `test -f 'mcs_c.cc' || echo '$(srcdir)/'`mcs_c.cc

libmcs_la-Utils.lo: Utils.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-Utils.lo -MD -MP -MF $(DEPDIR)/libmcs_la-Utils.Tpo -c -o libmcs_la-Utils.lo `test -f 'Utils.cc' || echo '$(srcdir)/'`Utils.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-Utils.Tpo $(DEPDIR)/libmcs_la-Utils.Plo
#	$(AM_V_CXX)source='Utils.cc' object='libmcs_la-Utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-Utils.lo `test -f 'Utils.cc' || echo '$(srcdir)/'`Utils.cc

libmcs_la-Readers.lo: Readers.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-Readers.lo -MD -MP -MF $(DEPDIR)/libmcs_la-Readers.Tpo -c -o libmcs_la-Readers.lo `test -f 'Readers.cc' || echo '$(srcdir)/'`Readers.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-Readers.Tpo $(DEPDIR)/libmcs_la-Readers.Plo
#	$(AM_V_CXX)source='Readers.cc' object='libmcs_la-Readers.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-Readers.lo `test -f 'Readers.cc' || echo '$(srcdir)/'`Readers.cc

libmcs_la-Writers.lo: Writers.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-Writers.lo -MD -MP -MF $(DEPDIR)/libmcs_la-Writers.Tpo -c -o libmcs_la-Writers.lo `test -f 'Writers.cc' || echo '$(srcdir)/'`Writers.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-Writers.Tpo $(DEPDIR)/libmcs_la-Writers.Plo
#	$(AM_V_CXX)source='Writers.cc' object='libmcs_la-Writers.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-Writers.lo `test -f 'Writers.cc' || echo '$(srcdir)/'`Writers.cc

libmcs_la-Event.lo: Event.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-Event.lo -MD -MP -MF $(DEPDIR)/libmcs_la-Event.Tpo -c -o libmcs_la-Event.lo `test -f 'Event.cc' || echo '$(srcdir)/'`Event.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-Event.Tpo $(DEPDIR)/libmcs_la-Event.Plo
#	$(AM_V_CXX)source='Event.cc' object='libmcs_la-Event.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-Event.lo `test -f 'Event.cc' || echo '$(srcdir)/'`Event.cc

libmcs_la-Serializable.lo: Serializable.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-Serializable.lo -MD -MP -MF $(DEPDIR)/libmcs_la-Serializable.Tpo -c -o libmcs_la-Serializable.lo `test -f 'Serializable.cc' || echo '$(srcdir)/'`Serializable.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-Serializable.Tpo $(DEPDIR)/libmcs_la-Serializable.Plo
#	$(AM_V_CXX)source='Serializable.cc' object='libmcs_la-Serializable.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-Serializable.lo `test -f 'Serializable.cc' || echo '$(srcdir)/'`Serializable.cc

libmcs_la-Socket.lo: Socket.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-Socket.lo -MD -MP -MF $(DEPDIR)/libmcs_la-Socket.Tpo -c -o libmcs_la-Socket.lo `test -f 'Socket.cc' || echo '$(srcdir)/'`Socket.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-Socket.Tpo $(DEPDIR)/libmcs_la-Socket.Plo
#	$(AM_V_CXX)source='Socket.cc' object='libmcs_la-Socket.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-Socket.lo `test -f 'Socket.cc' || echo '$(srcdir)/'`Socket.cc

libmcs_la-Thread.lo: Thread.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-Thread.lo -MD -MP -MF $(DEPDIR)/libmcs_la-Thread.Tpo -c -o libmcs_la-Thread.lo `test -f 'Thread.cc' || echo '$(srcdir)/'`Thread.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-Thread.Tpo $(DEPDIR)/libmcs_la-Thread.Plo
#	$(AM_V_CXX)source='Thread.cc' object='libmcs_la-Thread.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-Thread.lo `test -f 'Thread.cc' || echo '$(srcdir)/'`Thread.cc

libmcs_la-Data.lo: Data.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-Data.lo -MD -MP -MF $(DEPDIR)/libmcs_la-Data.Tpo -c -o libmcs_la-Data.lo `test -f 'Data.cc' || echo '$(srcdir)/'`Data.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-Data.Tpo $(DEPDIR)/libmcs_la-Data.Plo
#	$(AM_V_CXX)source='Data.cc' object='libmcs_la-Data.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-Data.lo `test -f 'Data.cc' || echo '$(srcdir)/'`Data.cc

libmcs_la-Record.lo: Record.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-Record.lo -MD -MP -MF $(DEPDIR)/libmcs_la-Record.Tpo -c -o libmcs_la-Record.lo `test -f 'Record.cc' || echo '$(srcdir)/'`Record.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-Record.Tpo $(DEPDIR)/libmcs_la-Record.Plo
#	$(AM_V_CXX)source='Record.cc' object='libmcs_la-Record.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-Record.lo `test -f 'Record.cc' || echo '$(srcdir)/'`Record.cc

libmcs_la-Conf.lo: Conf.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-Conf.lo -MD -MP -MF $(DEPDIR)/libmcs_la-Conf.Tpo -c -o libmcs_la-Conf.lo `test -f 'Conf.cc' || echo '$(srcdir)/'`Conf.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-Conf.Tpo $(DEPDIR)/libmcs_la-Conf.Plo
#	$(AM_V_CXX)source='Conf.cc' object='libmcs_la-Conf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-Conf.lo `test -f 'Conf.cc' || echo '$(srcdir)/'`Conf.cc

libmcs_la-CommandParser.lo: CommandParser.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-CommandParser.lo -MD -MP -MF $(DEPDIR)/libmcs_la-CommandParser.Tpo -c -o libmcs_la-CommandParser.lo `test -f 'CommandParser.cc' || echo '$(srcdir)/'`CommandParser.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-CommandParser.Tpo $(DEPDIR)/libmcs_la-CommandParser.Plo
#	$(AM_V_CXX)source='CommandParser.cc' object='libmcs_la-CommandParser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-CommandParser.lo `test -f 'CommandParser.cc' || echo '$(srcdir)/'`CommandParser.cc

libmcs_la-Db.lo: Db.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-Db.lo -MD -MP -MF $(DEPDIR)/libmcs_la-Db.Tpo -c -o libmcs_la-Db.lo `test -f 'Db.cc' || echo '$(srcdir)/'`Db.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-Db.Tpo $(DEPDIR)/libmcs_la-Db.Plo
#	$(AM_V_CXX)source='Db.cc' object='libmcs_la-Db.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-Db.lo `test -f 'Db.cc' || echo '$(srcdir)/'`Db.cc

libmcs_la-BaseThread.lo: BaseThread.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-BaseThread.lo -MD -MP -MF $(DEPDIR)/libmcs_la-BaseThread.Tpo -c -o libmcs_la-BaseThread.lo `test -f 'BaseThread.cc' || echo '$(srcdir)/'`BaseThread.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-BaseThread.Tpo $(DEPDIR)/libmcs_la-BaseThread.Plo
#	$(AM_V_CXX)source='BaseThread.cc' object='libmcs_la-BaseThread.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-BaseThread.lo `test -f 'BaseThread.cc' || echo '$(srcdir)/'`BaseThread.cc

libmcs_la-UserThread.lo: UserThread.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-UserThread.lo -MD -MP -MF $(DEPDIR)/libmcs_la-UserThread.Tpo -c -o libmcs_la-UserThread.lo `test -f 'UserThread.cc' || echo '$(srcdir)/'`UserThread.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-UserThread.Tpo $(DEPDIR)/libmcs_la-UserThread.Plo
#	$(AM_V_CXX)source='UserThread.cc' object='libmcs_la-UserThread.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-UserThread.lo `test -f 'UserThread.cc' || echo '$(srcdir)/'`UserThread.cc

libmcs_la-LocalThread.lo: LocalThread.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-LocalThread.lo -MD -MP -MF $(DEPDIR)/libmcs_la-LocalThread.Tpo -c -o libmcs_la-LocalThread.lo `test -f 'LocalThread.cc' || echo '$(srcdir)/'`LocalThread.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-LocalThread.Tpo $(DEPDIR)/libmcs_la-LocalThread.Plo
#	$(AM_V_CXX)source='LocalThread.cc' object='libmcs_la-LocalThread.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-LocalThread.lo `test -f 'LocalThread.cc' || echo '$(srcdir)/'`LocalThread.cc

libmcs_la-Env.lo: Env.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-Env.lo -MD -MP -MF $(DEPDIR)/libmcs_la-Env.Tpo -c -o libmcs_la-Env.lo `test -f 'Env.cc' || echo '$(srcdir)/'`Env.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-Env.Tpo $(DEPDIR)/libmcs_la-Env.Plo
#	$(AM_V_CXX)source='Env.cc' object='libmcs_la-Env.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-Env.lo `test -f 'Env.cc' || echo '$(srcdir)/'`Env.cc

libmcs_la-Server.lo: Server.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-Server.lo -MD -MP -MF $(DEPDIR)/libmcs_la-Server.Tpo -c -o libmcs_la-Server.lo `test -f 'Server.cc' || echo '$(srcdir)/'`Server.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-Server.Tpo $(DEPDIR)/libmcs_la-Server.Plo
#	$(AM_V_CXX)source='Server.cc' object='libmcs_la-Server.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-Server.lo `test -f 'Server.cc' || echo '$(srcdir)/'`Server.cc

libmcs_la-Client.lo: Client.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-Client.lo -MD -MP -MF $(DEPDIR)/libmcs_la-Client.Tpo -c -o libmcs_la-Client.lo `test -f 'Client.cc' || echo '$(srcdir)/'`Client.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-Client.Tpo $(DEPDIR)/libmcs_la-Client.Plo
#	$(AM_V_CXX)source='Client.cc' object='libmcs_la-Client.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-Client.lo `test -f 'Client.cc' || echo '$(srcdir)/'`Client.cc

libmcs_la-Main.lo: Main.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -MT libmcs_la-Main.lo -MD -MP -MF $(DEPDIR)/libmcs_la-Main.Tpo -c -o libmcs_la-Main.lo `test -f 'Main.cc' || echo '$(srcdir)/'`Main.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libmcs_la-Main.Tpo $(DEPDIR)/libmcs_la-Main.Plo
#	$(AM_V_CXX)source='Main.cc' object='libmcs_la-Main.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmcs_la_CXXFLAGS) $(CXXFLAGS) -c -o libmcs_la-Main.lo `test -f 'Main.cc' || echo '$(srcdir)/'`Main.cc

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(LTLIBRARIES) $(HEADERS) mcs_config.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/b64codec.Po
	-rm -f ./$(DEPDIR)/killmcs.Po
	-rm -f ./$(DEPDIR)/libmcs_la-BaseThread.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Client.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-CommandParser.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Conf.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Data.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Db.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Env.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Event.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-LocalThread.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Main.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Readers.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Record.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Serializable.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Server.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Socket.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Thread.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-UserThread.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Utils.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Writers.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-mcs_c.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-mcsmsg.Plo
	-rm -f ./$(DEPDIR)/mcs_fortran.Plo
	-rm -f ./$(DEPDIR)/mcscreatekey.Po
	-rm -f ./$(DEPDIR)/mcsexec.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/b64codec.Po
	-rm -f ./$(DEPDIR)/killmcs.Po
	-rm -f ./$(DEPDIR)/libmcs_la-BaseThread.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Client.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-CommandParser.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Conf.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Data.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Db.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Env.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Event.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-LocalThread.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Main.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Readers.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Record.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Serializable.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Server.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Socket.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Thread.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-UserThread.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Utils.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-Writers.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-mcs_c.Plo
	-rm -f ./$(DEPDIR)/libmcs_la-mcsmsg.Plo
	-rm -f ./$(DEPDIR)/mcs_fortran.Plo
	-rm -f ./$(DEPDIR)/mcscreatekey.Po
	-rm -f ./$(DEPDIR)/mcsexec.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


mcsmsg.hh: mcsmsg.pre prepConst.pl
	cat mcsmsg.pre | /opt/local/bin/perl prepConst.pl  > mcsmsg.hh 2> mcsmsg.cc

mcs_fortran.c: Makefile mcs.hh mcs_c.h
	$(CC) -DWANT_DESC -E -P mcs_c.pre.h | grep -v '#' | /opt/local/bin/perl c2fortran.pl $(build_cpu)_$(build_os) >$@

mcs_c.h: mcs_c.pre.h mcsifd.h
	$(CXX) -x c++ -DWANT_HEAD -E -CC mcs_c.pre.h  | /opt/local/bin/perl beautify.pl > mcs_c.h

mcs_c.cc: mcs_c.pre.h mcsifd.h
	$(CXX) -x c++ -DWANT_CODE -E -CC mcs_c.pre.h  | /opt/local/bin/perl beautify.pl > mcs_c.cc

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
